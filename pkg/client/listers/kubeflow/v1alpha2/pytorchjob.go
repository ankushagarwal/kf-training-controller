// Code generated by lister-gen. DO NOT EDIT.

package v1alpha2

import (
	v1alpha2 "github.com/ankushagarwal/kf-training-controller/pkg/apis/kubeflow/v1alpha2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PyTorchJobLister helps list PyTorchJobs.
type PyTorchJobLister interface {
	// List lists all PyTorchJobs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha2.PyTorchJob, err error)
	// PyTorchJobs returns an object that can list and get PyTorchJobs.
	PyTorchJobs(namespace string) PyTorchJobNamespaceLister
	PyTorchJobListerExpansion
}

// pyTorchJobLister implements the PyTorchJobLister interface.
type pyTorchJobLister struct {
	indexer cache.Indexer
}

// NewPyTorchJobLister returns a new PyTorchJobLister.
func NewPyTorchJobLister(indexer cache.Indexer) PyTorchJobLister {
	return &pyTorchJobLister{indexer: indexer}
}

// List lists all PyTorchJobs in the indexer.
func (s *pyTorchJobLister) List(selector labels.Selector) (ret []*v1alpha2.PyTorchJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.PyTorchJob))
	})
	return ret, err
}

// PyTorchJobs returns an object that can list and get PyTorchJobs.
func (s *pyTorchJobLister) PyTorchJobs(namespace string) PyTorchJobNamespaceLister {
	return pyTorchJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PyTorchJobNamespaceLister helps list and get PyTorchJobs.
type PyTorchJobNamespaceLister interface {
	// List lists all PyTorchJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha2.PyTorchJob, err error)
	// Get retrieves the PyTorchJob from the indexer for a given namespace and name.
	Get(name string) (*v1alpha2.PyTorchJob, error)
	PyTorchJobNamespaceListerExpansion
}

// pyTorchJobNamespaceLister implements the PyTorchJobNamespaceLister
// interface.
type pyTorchJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PyTorchJobs in the indexer for a given namespace.
func (s pyTorchJobNamespaceLister) List(selector labels.Selector) (ret []*v1alpha2.PyTorchJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha2.PyTorchJob))
	})
	return ret, err
}

// Get retrieves the PyTorchJob from the indexer for a given namespace and name.
func (s pyTorchJobNamespaceLister) Get(name string) (*v1alpha2.PyTorchJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha2.Resource("pytorchjob"), name)
	}
	return obj.(*v1alpha2.PyTorchJob), nil
}
